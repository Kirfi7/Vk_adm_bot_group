from cfg import rank_up


def get_default_info(array):
    return f"üîë –û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è üîë\n" \
           f"–í–∞—à –Ω–∏–∫–Ω–µ–π–º: {array[1]}\n" \
           f"–î–æ–ª–∂–Ω–æ—Å—Ç—å: {array[2]}\n" \
           f"–î–æ–ø. –¥–æ–ª–∂–Ω–æ—Å—Ç—å: {array[3]}\n" \
           f"–£—Ä–æ–≤–µ–Ω—å –∞–¥–º–∏–Ω-–ø—Ä–∞–≤: {array[12]}\n" \
           f"\nüìÖ –í–∞–∂–Ω—ã–µ –¥–∞—Ç—ã –∏ –¥–Ω–∏ üìÖ\n" \
           f"–î–∞—Ç–∞ –ø–æ—Å—Ç–∞–Ω–æ–≤–∫–∏: {array[4]}\n" \
           f"–ü–æ—Å–ª–µ–¥–Ω–µ–µ –ø–æ–≤—ã—à–µ–Ω–∏–µ: {array[11]}\n" \
           f"–î–Ω–µ–π —Å –º–æ–º–µ–Ω—Ç–∞ –ø–æ–≤—ã—à–µ–Ω–∏—è: {array[18]}\n" \
           f"–í—Å–µ–≥–æ –¥–Ω–µ–π –Ω–∞ –∞–¥–º–∏–Ω-–ø–æ—Å—Ç—É: {array[19]}\n" \
           f"\n‚õîÔ∏è –ê–∫—Ç–∏–≤–Ω—ã–µ –Ω–∞–∫–∞–∑–∞–Ω–∏—è ‚õîÔ∏è\n" \
           f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—ã–≥–æ–≤–æ—Ä–æ–≤: {array[14]}/3\n" \
           f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø—Ä–µ–¥–æ–≤: {array[15]}/2\n" \
           f"–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—Å—Ç–Ω—ã—Ö: {array[16]}/2\n\n" \
           f"‚úÖ –û–±—â–µ–µ –∫–æ–ª-–≤–æ –æ—Ç–≤–µ—Ç–æ–≤: {array[17]}\n"


def get_info_about_rank(array):
    admin_lvl = array[12]

    rank_standards = {
        "1": {"days": 14, "reports": 5000, "this_rank": "–ú–ª–∞–¥—à–µ–≥–æ –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", "next_rank": "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞"},
        "2": {"days": 25, "reports": 1000, "this_rank": "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞", "next_rank": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"},
        "3": {"days": 50, "reports": 25000, "this_rank": "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞", "next_rank": "–°—Ç–∞—Ä—à–µ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞"}
    }

    if int(admin_lvl) < 4:
        reports = int(array[17]); up_days = int(array[18])
        punish = [int(array[14]), int(array[15]), int(array[16])]

        t = f"–° {rank_standards[admin_lvl]['this_rank']} –Ω–∞ {rank_standards[admin_lvl]['next_rank']}:"

        days_by_lvl = int(rank_standards[admin_lvl]['days'])
        reps_by_lvl = int(rank_standards[admin_lvl]['reports'])

        if days_by_lvl > up_days and reps_by_lvl > reports:
            return rank_up(reps_by_lvl, days_by_lvl, (reps_by_lvl - reports), (days_by_lvl - up_days), punish, 0, t)

        elif days_by_lvl > up_days and reps_by_lvl <= reports:
            return rank_up(reps_by_lvl, days_by_lvl, 0, (days_by_lvl - up_days), punish, 0, t)

        elif days_by_lvl <= up_days and reps_by_lvl > reports:
            return rank_up(reps_by_lvl, days_by_lvl, (reps_by_lvl - reports), 0, punish, 0, t)

        else:
            return rank_up(reps_by_lvl, days_by_lvl, (reps_by_lvl - reports), 0, punish, 1, t)
    else:
        return "–î–æ—Å—Ç–∏–≥–Ω—É—Ç –º–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π –∞–¥–º–∏–Ω-—É—Ä–æ–≤–µ–Ω—å!"


def get_rank_standard(array):
    post = array[2]
    second = array[3]
    level = f"{array[12]}lvl"

    rank_standards = {
        "1lvl": "–û—Ç–≤–µ—Ç—ã: 250 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–ù–∞–∫–∞–∑–∞–Ω–∏–π: 10 —à—Ç—É–∫",
        "2lvl": "–û—Ç–≤–µ—Ç—ã: 200 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–ù–∞–∫–∞–∑–∞–Ω–∏–π: 10 —à—Ç—É–∫\n–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: 2 —à—Ç—É–∫–∏",
        "–ú–ö": "–û—Ç–≤–µ—Ç—ã: 175 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–ù–∞–∫–∞–∑–∞–Ω–∏–π: 15 —à—Ç—É–∫\n–ü–æ—Å—Ç: –ó–∞ —Å–≤–æ–µ–π —Ñ—Ä–∞–∫—Ü–∏–µ–π",
        "–ú–§": "–û—Ç–≤–µ—Ç—ã: 150 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 120 –º–∏–Ω—É—Ç\n–ù–∞–∫–∞–∑–∞–Ω–∏–π: 10 —à—Ç—É–∫\n–§–æ—Ä—É–º: 10 –æ—Ç–≤–µ—Ç–æ–≤\n–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: 1 —à—Ç—É–∫–∞",
        "–§–ö": "–û—Ç–≤–µ—Ç—ã: 170 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–ù–∞–∫–∞–∑–∞–Ω–∏–π: 15 —à—Ç—É–∫\n–ü–æ—Å—Ç: –ó–∞ —Å–≤–æ–µ–π —Ñ—Ä–∞–∫—Ü–∏–µ–π\n–§–æ—Ä—É–º: 10 –æ—Ç–≤–µ—Ç–æ–≤\n–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: 1 —à—Ç—É–∫–∞",
        "3lvl": "–û—Ç–≤–µ—Ç—ã: 200 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–ù–∞–∫–∞–∑–∞–Ω–∏–π: 15 —à—Ç—É–∫\n–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: 2 —à—Ç—É–∫–∏",
        "4lvl": "–û—Ç–≤–µ—Ç—ã: 200 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–ù–∞–∫–∞–∑–∞–Ω–∏–π: 20 —à—Ç—É–∫\n–ú–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è: 1 —à—Ç—É–∫–∞",
        "–ó–ì–°": "–û—Ç–≤–µ—Ç—ã: 120 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 130 –º–∏–Ω—É—Ç\n–ù–∞–∫–∞–∑–∞–Ω–∏–π: 10 —à—Ç—É–∫",
        "–ì–°": "–û—Ç–≤–µ—Ç—ã: 100 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–ù–∞–∫–∞–∑–∞–Ω–∏–π: 5 —à—Ç—É–∫",
        "–ö": "–û—Ç–≤–µ—Ç—ã: 50 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç",
        "–ó–ì–ê": "–û—Ç–≤–µ—Ç—ã: 1000 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 1440 –º–∏–Ω—É—Ç",
        "–ì–ê": "–û—Ç–≤–µ—Ç—ã: 30 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 90 –º–∏–Ω—É—Ç"
    }

    points_standards = {
        "1lvl": "–û—Ç–≤–µ—Ç—ã: 250 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 180 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 50 epoints",
        "2lvl": "–û—Ç–≤–µ—Ç—ã: 200 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 180 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 55 epoints",
        "3lvl": "–û—Ç–≤–µ—Ç—ã: 180 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 180 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 70 epoints",
        "4lvl": "–û—Ç–≤–µ—Ç—ã: 125 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 90 epoints",
        "–ì–ê": "–û—Ç–≤–µ—Ç—ã: 30 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 90 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 100 epoints",
        "–ì–°": "–û—Ç–≤–µ—Ç—ã: 75 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 85 epoints",
        "–ì–°_–•": "–û—Ç–≤–µ—Ç—ã: 75 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 90 epoints",
        "–ó–ì–°": "–û—Ç–≤–µ—Ç—ã: 100 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 80 epoints",
        "–ó–ì–ê": "–û—Ç–≤–µ—Ç—ã: 25 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 120 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 95 epoints",
        "–ö": "–û—Ç–≤–µ—Ç—ã: 50 —à—Ç—É–∫\n–û–Ω–ª–∞–π–Ω: 150 –º–∏–Ω—É—Ç\n–í—ã–ø–ª–∞—Ç–∞: 90 epoints"
    }

    if "–ú–ª–∞–¥—à–∏–π –ú–æ–¥–µ—Ä–∞—Ç–æ—Ä" in post:
        standard = rank_standards["1lvl"]
        points = points_standards["1lvl"]

    elif "–ú–æ–¥–µ—Ä–∞—Ç–æ—Ä" in post:
        if "–ú–ö" in second and "–ú–§" in second:
            standard = rank_standards["–§–ö"]
            points = points_standards["2lvl"]
        elif "–ú–ö" in second:
            standard = rank_standards["–ú–ö"]
            points = points_standards["2lvl"]
        elif "–ú–§" in second:
            standard = rank_standards["–ú–§"]
            points = points_standards["2lvl"]
        else:
            standard = rank_standards["2lvl"]
            points = points_standards["2lvl"]

    elif "–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" in post:
        if "–ú–ö" in second and "–ú–§" in second:
            standard = rank_standards["–§–ö"]
            points = points_standards["3lvl"]
        elif "–ú–ö" in second:
            standard = rank_standards["–ú–ö"]
            points = points_standards["3lvl"]
        elif "–ú–§" in second:
            standard = rank_standards["–ú–§"]
            points = points_standards["3lvl"]
        else:
            standard = rank_standards["3lvl"]
            points = points_standards["3lvl"]

    elif "–°—Ç–∞—Ä—à–∏–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" in post:
        if "–ú–ö" in second and "–ú–§" in second:
            standard = rank_standards["–§–ö"]
            points = points_standards["4lvl"]
        elif "–ú–ö" in second:
            standard = rank_standards["–ú–ö"]
            points = points_standards["4lvl"]
        elif "–ú–§" in second:
            standard = rank_standards["–ú–§"]
            points = points_standards["4lvl"]
        else:
            standard = rank_standards["4lvl"]
            points = points_standards["4lvl"]

    elif "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ì–ª–∞–≤–Ω–æ–≥–æ –°–ª–µ–¥—è—â–µ–≥–æ" in post:
        if "–ì–û–°–°" in post or "–û–ü–ì" in post or "–•–µ–ª–ø–µ—Ä–∞–º–∏" in post:
            standard = rank_standards["–ó–ì–°"]
            points = points_standards["–ó–ì–°"]
        else:
            standard = rank_standards["–ó–ì–°"]
            points = points_standards[level]

    elif "–ì–ª–∞–≤–Ω—ã–π –°–ª–µ–¥—è—â–∏–π" in post:
        if "–•–µ–ª–ø–µ—Ä–∞–º–∏" in post:
            standard = rank_standards["–ì–°"]
            points = points_standards["–ì–°_–•"]
        elif "–ì–û–°–°" in post or "–û–ü–ì" in post:
            standard = rank_standards["–ì–°"]
            points = points_standards["–ì–°"]
        else:
            standard = rank_standards["–ì–°"]
            points = points_standards[level]

    elif "–ö—É—Ä–∞—Ç–æ—Ä –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ü–∏–∏" in post:
        standard = rank_standards["–ö"]
        points = points_standards["–ö"]

    elif "–ó–∞–º–µ—Å—Ç–∏—Ç–µ–ª—å –ì–ª–∞–≤–Ω–æ–≥–æ –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞" in post:
        standard = rank_standards["–ó–ì–ê"]
        points = points_standards["–ó–ì–ê"]

    elif "–ì–ª–∞–≤–Ω—ã–π –ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä" in post:
        standard = rank_standards["–ì–ê"]
        points = points_standards["–ì–ê"]

    else:
        return "–û—à–∏–±–∫–∞! –°–æ–æ–±—â–∏—Ç–µ —ç—Ç–æ @xm_pearson –∏–ª–∏ @kirfibely"

    return f"üìÜ –í–∞—à –Ω–æ—Ä–º–∞—Ç–∏–≤ üìÜ\n{standard}\n\nüí∞ –ù–æ—Ä–º–∞—Ç–∏–≤ epoints üí∞\n{points}"


def ranked_up(array):
    admin_lvl = array[12]

    rank_standards = {
        "1": {"days": 14, "reports": 5000},
        "2": {"days": 25, "reports": 10000},
        "3": {"days": 50, "reports": 25000}
    }

    if int(admin_lvl) < 4:
        reports = int(array[17]); up_days = int(array[18])
        punish = 1 if (int(array[14]) + int(array[15]) + int(array[16])) == 0 else 0

        days_by_lvl = int(rank_standards[admin_lvl]['days'])
        reps_by_lvl = int(rank_standards[admin_lvl]['reports'])

        if punish == 1 and reports >= reps_by_lvl and up_days >= days_by_lvl:
            return 1, [admin_lvl, array[1]]

    return 0, 0
